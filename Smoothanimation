package com.sbi.upi.customerMode.modules.iot;

import android.content.Context;
import android.transition.AutoTransition;
import android.transition.TransitionManager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.sbi.upi.R;
import com.sbi.upi.customerMode.common.data.models.response.banking.AccountDetail;

import java.util.List;

public class HistoryIOTAdapter extends RecyclerView.Adapter<HistoryIOTAdapter.AccountViewHolder> {

    private final List<AccountDetail> accountList;
    private final Context context;

    // Track the expanded position (-1 = none)
    private int expandedPosition = -1;

    public HistoryIOTAdapter(Context context, List<AccountDetail> accountList) {
        this.context = context;
        this.accountList = accountList;
    }

    @NonNull
    @Override
    public AccountViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View v = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.revamp_item_iothistory, parent, false);
        return new AccountViewHolder(v);
    }

    @Override
    public void onBindViewHolder(@NonNull AccountViewHolder holder, int position) {
        boolean isExpanded = position == expandedPosition;

        // Set state without animation during bind
        holder.ll_childview.setVisibility(isExpanded ? View.VISIBLE : View.GONE);
        holder.btnMenu.setRotation(isExpanded ? 90f : 0f);

        // Inflate children only once per holder (avoid duplicates)
        if (holder.ll_childview.getChildCount() == 0) {
            for (int i = 0; i < 4; i++) {
                LinearLayout childLayout = (LinearLayout) LayoutInflater.from(context)
                        .inflate(R.layout.layout_addview_iot, holder.ll_childview, false);
                holder.ll_childview.addView(childLayout);
            }
        }

        holder.btnMenu.setOnClickListener(v -> {
            int oldExpanded = expandedPosition;

            if (isExpanded) {
                // Collapse the same item if tapped again
                expandedPosition = -1;
                TransitionManager.beginDelayedTransition((ViewGroup) holder.itemView, new AutoTransition());
                holder.ll_childview.setVisibility(View.GONE);
                rotateIcon(holder.btnMenu, false);

            } else {
                // Expand the clicked item
                expandedPosition = position;

                // Collapse the previously expanded item (if any)
                if (oldExpanded >= 0) {
                    RecyclerView rv = findParentRecyclerView(holder.itemView);
                    if (rv != null) {
                        RecyclerView.ViewHolder oldVH = rv.findViewHolderForAdapterPosition(oldExpanded);
                        if (oldVH instanceof AccountViewHolder) {
                            AccountViewHolder oldHolder = (AccountViewHolder) oldVH;
                            TransitionManager.beginDelayedTransition((ViewGroup) oldHolder.itemView, new AutoTransition());
                            oldHolder.ll_childview.setVisibility(View.GONE);
                            rotateIcon(oldHolder.btnMenu, false);
                        } else {
                            notifyItemChanged(oldExpanded);
                        }
                    } else {
                        notifyItemChanged(oldExpanded);
                    }
                }

                // Expand current one
                TransitionManager.beginDelayedTransition((ViewGroup) holder.itemView, new AutoTransition());
                holder.ll_childview.setVisibility(View.VISIBLE);
                rotateIcon(holder.btnMenu, true);
            }
        });
    }

    @Override
    public int getItemCount() {
        return accountList != null ? accountList.size() : 0;
    }

    static class AccountViewHolder extends RecyclerView.ViewHolder {
        TextView tvTitle, tv_devicetype, tv_devicemodel, tv_vpa;
        ImageView btnMenu, ivDeviceIcon;
        LinearLayout ll_childview;

        public AccountViewHolder(@NonNull View itemView) {
            super(itemView);
            ivDeviceIcon = itemView.findViewById(R.id.ivDeviceIcon);
            tvTitle = itemView.findViewById(R.id.tvTitle);
            tv_devicetype = itemView.findViewById(R.id.tv_devicetype);
            tv_devicemodel = itemView.findViewById(R.id.tv_devicemodel);
            tv_vpa = itemView.findViewById(R.id.tv_vpa);
            btnMenu = itemView.findViewById(R.id.btnMenu);
            ll_childview = itemView.findViewById(R.id.ll_childview);
        }
    }

    // Rotate arrow smoothly (0° → 90° when expanding, 90° → 0° when collapsing)
    private void rotateIcon(ImageView imageView, boolean expand) {
        float to = expand ? 90f : 0f;
        imageView.animate().rotation(to).setDuration(250).start();
    }

    // Find parent RecyclerView
    private RecyclerView findParentRecyclerView(View v) {
        ViewParent parent = v.getParent();
        while (parent != null && !(parent instanceof RecyclerView)) {
            parent = parent.getParent();
        }
        return (RecyclerView) parent;
    }
}
